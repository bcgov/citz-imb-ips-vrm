services:

  ########################## Postgres #########################################
  postgres:
    container_name: postgres
    image: postgres:13.11-alpine3.17
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./database/data:/data/db
    ports:
      - '${POSTGRES_PORT:-5432}:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER} || exit 1']
      interval: 5s
      timeout: 3s
    networks:
      - vrm
  ########################### End Postgres ####################################

  ########################### Python ##########################################
  app:
    build:
      context: .
      dockerfile: Dockerfile.python
    ports:
      - "80:80"

  ########################### End Python ######################################

  ########################### Networks Definition #############################
networks:
  vrm:
    name: vrm-net
    driver: bridge
  ########################### End Networks Definition #########################

  ########################### Volumes Definition ##############################

  ########################### End Volumes Definition ##########################
